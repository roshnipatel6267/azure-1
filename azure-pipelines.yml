trigger:
- dev

pr:
- dev

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: terraform_approval
  displayName: "Terraform Approval"
  steps:
    - script: 
        echo "Terraform Approval Job"
      displayName: 'Terraform Approval'
      condition: succeededOrFailed()

- job: manual_approval
  displayName: "Manual Approval"
  dependsOn: terraform_approval
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: 
        echo "Manual Approval Job"
      displayName: 'Manual Approval'
      condition: succeededOrFailed()

    - script: |
        ls -la
        pwd
        cd $(Build.SourcesDirectory)/azure-1
        pwd
        terraform init
      displayName: 'Terraform Init'

    - script: |
        cd $(Build.SourcesDirectory)/azure-1
        terraform validate
      displayName: 'Terraform Validate'

    - script: |
        az login 
    - script: |
        cd $(Build.SourcesDirectory)/azure-1
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'

    - script: |
        read -p "Do you want to apply the Terraform changes? Type 'y' to apply, or 'n' to cancel: " result
        if [ "$result" != "y" ]; then
            echo "Pipeline execution canceled."
            exit 1
        fi
      displayName: 'Prompt for Approval'

    - script: |
        cd $(Build.SourcesDirectory)/azure-1
        terraform apply -auto-approve tfplan
      displayName: 'Apply Terraform Changes'
      condition: succeededOrFailed()
